{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(formbuilder, _http, _router) {\n    this.formbuilder = formbuilder;\n    this._http = _http;\n    this._router = _router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formbuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  logIn() {\n    //console.log(this.loginForm.value);\n    this._http.get('http://localhost:3000/signup').subscribe(res => {\n      const user = res.find(a => {\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n      });\n      if (user) {\n        alert(user.name + ' logged in successfully');\n        this._router.navigate(['/restaurent']);\n        this.loginForm.reset();\n      } else {\n        alert(\"Invalid credentials\");\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","formbuilder","_http","_router","ngOnInit","loginForm","group","email","password","logIn","get","subscribe","res","user","find","a","value","alert","name","navigate","reset","err","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Web Prog Framework 2\\week9\\Restaurent_Application\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm!: UntypedFormGroup;\r\n  constructor(private formbuilder: UntypedFormBuilder, private _http:HttpClient, private _router:Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formbuilder.group({\r\n      email: [''],\r\n      password: ['']\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    //console.log(this.loginForm.value);\r\n    this._http.get<any>('http://localhost:3000/signup').subscribe(\r\n      (res) => {\r\n        const user= res.find((a:any)=>{\r\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\r\n        });\r\n         if (user) {\r\n          alert(user.name + ' logged in successfully');\r\n          this._router.navigate(['/restaurent']);\r\n          this.loginForm.reset();\r\n         } else {\r\n          alert(\"Invalid credentials\");\r\n         }\r\n        }, err=>{\r\n          console.log(err);\r\n        })\r\n      }\r\n    \r\n  }\r\n\r\n\r\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,WAA+B,EAAUC,KAAgB,EAAUC,OAAc;IAAjF,KAAAF,WAAW,GAAXA,WAAW;IAA8B,KAAAC,KAAK,GAALA,KAAK;IAAqB,KAAAC,OAAO,GAAPA,OAAO;EAAY;EAE1GC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAEAC,KAAKA,CAAA;IACH;IACA,IAAI,CAACP,KAAK,CAACQ,GAAG,CAAM,8BAA8B,CAAC,CAACC,SAAS,CAC1DC,GAAG,IAAI;MACN,MAAMC,IAAI,GAAED,GAAG,CAACE,IAAI,CAAEC,CAAK,IAAG;QAC5B,OAAOA,CAAC,CAACR,KAAK,KAAK,IAAI,CAACF,SAAS,CAACW,KAAK,CAACT,KAAK,IAAIQ,CAAC,CAACP,QAAQ,KAAK,IAAI,CAACH,SAAS,CAACW,KAAK,CAACR,QAAQ;MAC/F,CAAC,CAAC;MACD,IAAIK,IAAI,EAAE;QACTI,KAAK,CAACJ,IAAI,CAACK,IAAI,GAAG,yBAAyB,CAAC;QAC5C,IAAI,CAACf,OAAO,CAACgB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACtC,IAAI,CAACd,SAAS,CAACe,KAAK,EAAE;OACtB,MAAM;QACNH,KAAK,CAAC,qBAAqB,CAAC;;IAE9B,CAAC,EAAEI,GAAG,IAAE;MACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;CAEH;AA9BUtB,cAAc,GAAAyB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW5B,cAAc,CA8BxB;SA9BUA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}